// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/moumou/server/biz/conf"
	"github.com/moumou/server/biz/handler"
	"github.com/moumou/server/biz/service"
	"github.com/moumou/server/biz/service/role"
	"github.com/moumou/server/biz/service/user"
	"github.com/moumou/server/gen/dao"
	"github.com/moumou/server/pkgs/database"
)

// Injectors from wire.go:

func wireApp(logger log.Logger, data *conf.Data, dbConfig *database.DbConfig) (*kratos.App, error) {
	db, err := database.NewMysqlGorm(dbConfig)
	if err != nil {
		return nil, err
	}
	daoDao := dao.NewDao(db)
	userService := user.NewUserService(data, daoDao)
	roleService := role.NewService(daoDao)
	serviceService := service.NewService(userService, roleService, daoDao)
	userHandlerHTTPServer := handler.NewUserHandler(serviceService)
	roleHandlerHTTPServer := handler.NewRoleHandler(serviceService)
	securityHandlerHTTPServer := handler.NewSecurityHandler(serviceService)
	permissionHandlerHTTPServer := handler.NewPermissionHandler(serviceService)
	server := NewHTTPServer(logger, data, userHandlerHTTPServer, roleHandlerHTTPServer, securityHandlerHTTPServer, permissionHandlerHTTPServer)
	app := newApp(logger, server)
	return app, nil
}
