syntax = "proto3";

package server.api;

import "google/api/annotations.proto";

option go_package = "server/api;api";

service RouterHandler {
  rpc CreateRouter(CreateRouterRequest) returns (CreateRouterResponse) {
    option (google.api.http) = {
      post: "/router/create",
      body: "*",
    };
  };

  rpc UpdateRouter(UpdateRouterRequest) returns (UpdateRouterResponse) {
    option (google.api.http) = {
      post: "/router/update",
      body: "*",
    };
  };

  rpc GetRouterList(GetRouterListRequest) returns (GetRouterListResponse) {
    option (google.api.http) = {
      post: "/router/list",
      body: "*",
    };
  };

  rpc GetRouterInfo(GetRouterInfoRequest) returns (GetRouterInfoResponse) {
    option (google.api.http) = {
      post: "/router/info",
      body: "*",
    };
  };

  rpc DeleteRouter(DeleteRouterRequest) returns (DeleteRouterResponse) {
    option (google.api.http) = {
      post: "/router/delete",
      body: "*",
    };
  };
}


message CreateRouterRequestData {
  string name = 2;
  string path = 3;
  string title = 4;
  bool is_menu = 5 [json_name="is_menu"];
  int64 pid = 6;
  int32 sort = 7;
  string component = 8;
}

message CreateRouterRequest {
    CreateRouterRequestData router = 1;
}

message CreateRouterResponseData {
  int64 id = 1;
}

message CreateRouterResponse {
  int32 code = 1;
  string message = 2;
  optional CreateRouterResponseData data = 3;
}

message UpdateRouterRequestData {
  int64 id = 1;
  string name = 2;
  string path = 3;
  string title = 4;
  bool is_menu = 5 [json_name="is_menu"];
  int64 pid = 6;
  int32 sort = 7;
  string component = 8;
}

message UpdateRouterRequest {
  UpdateRouterRequestData router = 1;
}

message UpdateRouterResponse {
  int32 code = 1;
  string message = 2;
}

message DeleteRouterRequest {
  repeated int64 ids = 1;
}

message DeleteRouterResponse {
  int32 code = 1;
  string message = 2;
}



message Router {
  int64 id = 1;
  string name = 2;
  string path = 3;
  string title = 4;
  bool is_menu = 5 [json_name="is_menu"];
  int64 pid = 6;
  int32 sort = 7;
  string component = 8;
  repeated Router children = 9;
  bool is_system = 10 [json_name="is_system"];
}

message GetRouterListRequest {
}

message GetRouterListResponseData {
  repeated Router list = 1;
}

message GetRouterListResponse {
  int32 code = 1;
  string message = 2;
  optional GetRouterListResponseData data = 3;
}

message GetRouterInfoRequest {
  int64 id = 1;
}

message GetRouterInfoResponse {
  int32 code = 1;
  string message = 2;
  optional Router data = 3;
}