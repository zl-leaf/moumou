syntax = "proto3";

package server.api;

import "google/api/annotations.proto";
import "permission.proto";
import "user.proto";

option go_package = "server/api;api";

service RoleHandler {
  rpc GetRoleList(GetRoleListRequest) returns (GetRoleListResponse){
    option (google.api.http) = {
      post: "/role/list",
      body: "*"
    };
  };

  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse){
    option (google.api.http) = {
      post: "/role/create",
      body: "*"
    };
  };

  rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse){
    option (google.api.http) = {
      post: "/role/update",
      body: "*"
    };
  };

  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse){
    option (google.api.http) = {
      post: "/role/delete",
      body: "*"
    };
  };

  rpc GetRoleInfo(GetRoleInfoRequest) returns (GetRoleInfoResponse){
    option (google.api.http) = {
      post: "/role/info",
      body: "*"
    };
  };

  rpc UpdateRolePermission(UpdateRolePermissionRequest) returns (UpdateRolePermissionResponse){
    option (google.api.http) = {
      post: "/role/permission/update",
      body: "*"
    };
  };

  rpc UpdateBindUser(UpdateBindUserRequest) returns (UpdateBindUserResponse) {
    option (google.api.http) = {
      post: "/role/bind_user/update",
      body: "*"
    };
  };
}

message Role {
  int64 id = 1;
  string name = 2;
  repeated Permission permissions = 3;
  repeated User users = 4;
}

message GetRoleListRequestFilter {
}

message GetRoleListRequest {
  int32 current_page = 1;
  int32 page_size = 2;
  optional GetRoleListRequestFilter filter = 3;
}

message GetRoleListResponseData {
  int64 total = 1;
  repeated Role list = 2;
}

message GetRoleListResponse {
  int32 code = 1;
  string message = 2;
  optional GetRoleListResponseData data = 3;
}

message CreateRoleRequestData {
  string name = 2;
}

message CreateRoleRequest {
  CreateRoleRequestData role = 1;
}

message CreateRoleResponseData {
  int64 id = 1;
}

message CreateRoleResponse {
  int32 code = 1;
  string message = 2;
  CreateRoleResponseData data = 3;
}

message UpdateRoleRequestData {
  int64 id = 1;
  string name = 2;
}

message UpdateRoleRequest {
  UpdateRoleRequestData role = 1;
}

message UpdateRoleResponse {
  int32 code = 1;
  string message = 2;
}

message DeleteRoleRequest {
  repeated int64 ids = 1;
}

message DeleteRoleResponse {
  int32 code = 1;
  string message = 2;
}

message RoleRelateField {
  bool permission = 1;
  bool bind_user = 2[json_name="bind_user"];
}

message GetRoleInfoRequest {
  int64 id = 1;
  optional RoleRelateField field = 2;
}

message GetRoleInfoResponse {
  int32 code = 1;
  string message = 2;
  Role data = 3;
}

message UpdateRolePermissionRequest {
  int64 id = 1;
  repeated int64 permission_ids = 2 [json_name="permission_ids"];
}

message UpdateRolePermissionResponse {
  int32 code = 1;
  string message = 2;
}

message UpdateBindUserRequest {
  int64 role_id = 1 [json_name="role_id"];
  repeated int64 user_ids = 2[json_name="user_ids"];
}

message UpdateBindUserResponse {
  int32 code = 1;
  string message = 2;
}
