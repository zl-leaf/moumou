syntax = "proto3";

package server.api;

import "google/api/annotations.proto";

option go_package = "server/api;api";

service UserHandler {
  rpc GetUserList(GetUserListRequest) returns (GetUserListResponse) {
    option (google.api.http) = {
      post: "/user/list",
      body: "*"
    };
  };
  rpc GetUserInfo(GetUserInfoRequest) returns (GetUserInfoResponse) {
    option (google.api.http) = {
      post: "/user/info",
      body: "*"
    };
  };
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/user/create",
      body: "*"
    };
  };
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      post: "/user/update",
      body: "*"
    };
  }
}

message User {
  int64 id = 1;
  string username = 2;
}

message GetUserListRequestFilter {
  optional string usernameLike = 1;
}

message GetUserListRequest {
  int32 currentPage = 1;
  int32 pageSize = 2;
  optional GetUserListRequestFilter filter = 3;
}

message GetUserListResponseData {
  int64 total = 1;
  repeated User list = 2;
}

message GetUserListResponse {
  int32 code = 1;
  string message = 2;
  optional GetUserListResponseData data = 3;
}

message GetUserInfoRequest {
  int64 id = 1;
}

message GetUserInfoResponse {
  int32 code = 1;
  string message = 2;
  optional User data = 3;
}

message CreateUserRequestData {
  string username = 2;
  string password = 3;
}

message CreateUserRequest {
  CreateUserRequestData user = 1;
}

message CreateUserResponseData {
  int64 id = 1;
}

message CreateUserResponse {
  int32 code = 1;
  string message = 2;
  CreateUserResponseData data = 3;
}


message UpdateUserRequestData {
  int64 id = 1;
  string username = 2;
}

message UpdateUserRequest {
  UpdateUserRequestData user = 1;
}

message UpdateUserResponse {
  int32 code = 1;
  string message = 2;
}